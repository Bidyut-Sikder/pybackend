


# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "testing" ]
  pull_request:
    branches: [ "testing" ]

permissions:
  contents: read

jobs:
  build:
    environment:
      name: testing
    env:
      database_username : ${{secrets.DATABASE_USERNAME}} # This is from github secret 
      database_password : ${{secrets.DATABASE_PASSWORD}}
      database_host : ${{secrets.DATABASE_HOST}}
      database_port : ${{secrets.DATABASE_PORT}}
      database_name : ${{secrets.DATABASE_NAME}}
      SECRET_KEY : ${{secrets.SECRET_KEY}}
      ALGORITHM : ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES : ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    runs-on: ubuntu-latest
    steps:
    - name: pulling git repo
      uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        pytest













# # This workflow will install Python dependencies, run tests and lint with a single version of Python
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# name: Python application

# on:
#   push:
#     branches: [ "alembic-setup" ]
#   pull_request:
#     branches: [ "alembic-setup" ]

# permissions:
#   contents: read

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - name: pulling git repo
#     - uses: actions/checkout@v4
#     - name: Set up Python 3.10
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.10"
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pytest
