"""Recreate missing migration

Revision ID: d332a8bf5a43
Revises: 1bf410e8358f
Create Date: 2024-12-22 11:46:29.511467

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd332a8bf5a43'
down_revision: Union[str, None] = '1bf410e8358f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('votes',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'post_id')
    )
    op.add_column('posts', sa.Column('content', sa.String(), nullable=False))

    op.add_column('posts', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('posts', sa.Column('user_id', sa.Integer(), nullable=False))
    op.alter_column('posts', 'title',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('posts', 'published',
               existing_type=sa.INTEGER(),
               type_=sa.Boolean(),
               nullable=False,
               postgresql_using="published::boolean")
    op.create_foreign_key(None, 'posts', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('posts', 'name')
    # ### end Alembic commands ###
    
    # Explantion of foreign key setup
    # op.create_foreign_key(
    #     "fk_posts_user_id_users_id",  # Name of the foreign key
    #     "posts",                     # Source table
    #     "users",                     # Referenced table
    #     ["user_id"],                 # Source columns
    #     ["id"],                      # Referenced columns
    #     ondelete="CASCADE"           # Deletion behavior
    # )

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('posts', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'posts', type_='foreignkey')
    op.alter_column('posts', 'published',
               existing_type=sa.Boolean(),
               type_=sa.INTEGER(),
               nullable=False)
    op.alter_column('posts', 'title',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('posts', 'user_id')
    op.drop_column('posts', 'created_at')
    op.drop_column('posts', 'content')
    op.drop_table('votes')
    op.drop_table('users')
    # ### end Alembic commands ###
